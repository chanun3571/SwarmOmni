<launch>
  <machine name="robot1" address="192.168.208.80" env-loader="/opt/ros/noetic/env.sh"/>
  <machine name="robot2" address="192.168.208.149" env-loader="/opt/ros/noetic/env.sh"/>
  <machine name="robot3" address="192.168.208.193" env-loader="/opt/ros/noetic/env.sh"/>


<node name="joy" pkg="joy" type="joy_node" output="screen"/> 
  
  <group ns="robot1">
  
    <node machine="robot1" name="scamper_driver" pkg="arobota2" type="ros_scamper_driver" respawn="true" output="screen">
      <param name="config_path" value="/home/revast-user/workspace/kinetic/src/ros_scamper_core/config/scamper_3wd.ini" type="string" />
    </node>

  </group>
  <group ns="robot2">
  
    <node machine="scamper204" name="scamper_driver" pkg="arobota2" type="ros_scamper_driver" respawn="true" output="screen">
      <param name="config_path" value="/home/revast-user/workspace/kinetic/src/ros_scamper_core/ros_scamper_core/config/scamper_3wd.ini" type="string" />
    </node>

  </group>

  <group ns="robot3">
  
    <node machine="scamper205" name="scamper_driver" pkg="ros_scamper_core" type="ros_scamper_driver" respawn="true" output="screen">
      <param name="config_path" value="/home/revast-user/workspace/kinetic/src/ros_scamper_core/ros_scamper_core/config/scamper_3wd.ini" type="string" />
    </node>

  </group>


</launch>



    <!-- fasdf -->

    <launch> 
 <param name="/use_sim_time" value="false"/>
 <arg name="node_start_delay" default="4"/>
 <arg name="node_start_delay1" default="35"/>
 
  <!-- Map server -->
    <node pkg="map_server" name="map_server" type="map_server" args="$(find arobota2)/map/mymap5.yaml">
    <param name="frame_id" value="map" />
    </node>

    <include file="$(find arobota2)/launch/navigation_gazebo_multi_1.launch"/> 
    <include file="$(find arobota2)/launch/navigation_gazebo_multi_2.launch"/>
    <include file="$(find arobota2)/launch/navigation_gazebo_multi_3.launch"/>  

  <!-- rviz -->
  <node name="rviz" pkg="rviz" type="rviz" required="true" args="-d $(find arobota2)/rviz/navigation_multi_new4.rviz"/>

  <!--initialize localization-->
  <node pkg="arobota2" type="initialize_position.py" name="initialize_localize" output="screen" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@'"/>
  <!-- <node pkg="arobota2" type="ensure_goal_pos.py" name="ensure_command" output="screen" /> -->
  <node pkg="arobota2" type="pose_collector_array.py" name="pose_collector" output="screen" />


  <!-- auto initial formation control  -->
  
  <!-- <node pkg="arobota2" type="centroid.py" respawn="false" name="centroid" output="screen"/>
  <include file="$(find arobota2)/launch/init_formation.launch"/>  -->

  <!-- with arrow key  -->
    
  <!-- <node pkg="arobota2" type="centroid_submit3.py" respawn="false" name="centroid1" output="screen"/>
  <include file="$(find arobota2)/launch/pose_formation.launch"/>  -->


  <!-- <node pkg="arobota2" type="initialize_position_vel.py" respawn="false" name="velocity_control" output="screen" launch-prefix="bash -c 'sleep $(arg node_start_delay1); $0 $@'"/> -->


</launch>
